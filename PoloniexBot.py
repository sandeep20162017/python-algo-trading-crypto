import json as O0OO000O0O0OOO000, requests as O00O00OO0000O0000
from time import strftime as OO0000OOOOO000OO0, gmtime as OOOOOOOO0O0000OOO
import time as O00O000O00O0O000O, platform as O0OO0OO00OO00O0O0, hmac as OO0O000O0O00O00OO, hashlib as O00OOOOO0O000OOO0, pdb as O0O0OOO00OO0OO0O0, random as O000OOO000OO00000, urllib3 as O000OOO0OOO0OO000, urllib as O0OOOO00O0O0000O0, utils as OO0OO0O000O00000O, colorama as O0OO0O0OOOOO0O00O
O0OOOO00O0O0000O0 = __import__('urllib.request', globals(), locals())
try:
    from urllib import urlencode as O0000OO0O0OO0OOO0
    from urlparse import urljoin as O000OOO00O0OO0O0O
except ImportError:
    from urllib.parse import urlencode as O0000OO0O0OO0OOO0
    from urllib.parse import urljoin as O000OOO00O0OO0O0O

import configparser as OOO0OOOO00O0OO0O0, sys as OO00OO000O0OO0OOO
config = OOO0OOOO00O0OO0O0.ConfigParser()
config.readfp(open('config.txt'))
key = config.get('Poloniex', 'Key')
secret = config.get('Poloniex', 'Secret')
secret = bytes(secret, 'utf8')
BuyPercent = config.get('PriceLip', 'BuyPercent')
SellPercent = config.get('PriceLip', 'SellPercent')
BuyPercent, SellPercent = OO0OO0O000O00000O.percentageFix(BuyPercent, SellPercent)

def make_nonce():
    return str(O000OOO000OO00000.randint(931290887.0, 1000000000))


def getTicker(O00OO0OOO0O00OO0O):
    O0O0OOO0OO0000O00 = 'https://poloniex.com/public?command=returnTicker'
    O00OOOO0000O000OO = O00O00OO0000O0000.get(O0O0OOO0OO0000O00)
    OO00O0000O0OOOOOO = O0OO000O0O0OOO000.loads(O00OOOO0000O000OO.text)
    OOOOO000OOO000O0O = OO00O0000O0OOOOOO['BTC_' + O00OO0OOO0O00OO0O]
    return OOOOO000OOO000O0O['last']


def getBalance(O0OO0O00000OO0OO0):
    O000OOOO000OOO000 = {}
    O000OOOO000OOO000['command'] = 'returnBalances'
    O000OOOO000OOO000['nonce'] = int(O00O000O00O0O000O.time() * 1000)
    O00O0O0O0000OO0OO = O0000OO0O0OO0OOO0(O000OOOO000OOO000)
    OO000O0OO0O0OOO00 = OO0O000O0O00O00OO.new(secret, O00O0O0O0000OO0OO.encode('utf8'), O00OOOOO0O000OOO0.sha512).hexdigest()
    O00O00OO00O0OO0OO = {'Content-Type': 'application/x-www-form-urlencoded','Key': key,'Sign': OO000O0OO0O0OOO00}
    OOOOOOO00O0O0OO0O = O00O00OO0000O0000.post('https://poloniex.com/tradingApi', data=O000OOOO000OOO000, headers=O00O00OO00O0OO0OO)
    O0OO00OOO0OOOOOOO = O0OO000O0O0OOO000.loads(OOOOOOO00O0O0OO0O.text)
    return O0OO00OOO0OOOOOOO[O0OO0O00000OO0OO0]


def getOrder(O0OOOOO0OO0OO00OO):
    OO00O00OOOOOOO00O = {}
    OO00O00OOOOOOO00O['command'] = 'returnTradeHistory'
    OO00O00OOOOOOO00O['currencyPair'] = 'BTC_' + O0OOOOO0OO0OO00OO
    OO00O00OOOOOOO00O['nonce'] = int(O00O000O00O0O000O.time() * 1000)
    OOO00O0000OO00O00 = O0000OO0O0OO0OOO0(OO00O00OOOOOOO00O)
    O00O0O00OOO0OO00O = OO0O000O0O00O00OO.new(secret, OOO00O0000OO00O00.encode('utf8'), O00OOOOO0O000OOO0.sha512).hexdigest()
    O00000OO00O0O0000 = {'Content-Type': 'application/x-www-form-urlencoded','Key': key,'Sign': O00O0O00OOO0OO00O}
    OOOO00OOO0O000OOO = O00O00OO0000O0000.post('https://poloniex.com/tradingApi', data=OO00O00OOOOOOO00O, headers=O00000OO00O0O0000)
    OOOO00O00OOO000OO = O0OO000O0O0OOO000.loads(OOOO00OOO0O000OOO.text)
    return OOOO00O00OOO000OO


def buyOrder(O0OOO000O0O0OO00O, O0O000O000OO0OO00):
    OO00OO0000OOO0000 = getTicker(O0OOO000O0O0OO00O)
    OOO0O0O00O00O00O0 = float(OO00OO0000OOO0000) * (1 + float(BuyPercent))
    OO0OOOOOO000O0O0O = {}
    OO0OOOOOO000O0O0O['nonce'] = int(O00O000O00O0O000O.time() * 1000)
    OO0OOOOOO000O0O0O['currencyPair'] = 'BTC_' + O0OOO000O0O0OO00O
    OO0OOOOOO000O0O0O['command'] = 'buy'
    OO0OOOOOO000O0O0O['rate'] = str(OOO0O0O00O00O00O0)
    OO0OOOOOO000O0O0O['amount'] = O0O000O000OO0OO00
    O0O00000OO0O0OOOO = O0000OO0O0OO0OOO0(OO0OOOOOO000O0O0O)
    O00O0OOO0O0O000O0 = OO0O000O0O00O00OO.new(secret, O0O00000OO0O0OOOO.encode('utf8'), O00OOOOO0O000OOO0.sha512).hexdigest()
    O0OO0O00OOO0OOOOO = {'Content-Type': 'application/x-www-form-urlencoded','Key': key,'Sign': O00O0OOO0O0O000O0}
    O0O00OOOO0OO00OOO = O00O00OO0000O0000.post('https://poloniex.com/tradingApi', data=OO0OOOOOO000O0O0O, headers=O0OO0O00OOO0OOOOO)
    OO0O00O0OO0O0O00O = O0OO000O0O0OOO000.loads(O0O00OOOO0OO00OOO.text)
    if 'error' in OO0O00O0OO0O0O00O:
        print(OO0O00O0OO0O0O00O)
    else:
        OO0OO000OOOO00OOO = OO0O00O0OO0O0O00O['resultingTrades'][0]['tradeID']
        OOOO0OOOO0O0OO0O0 = [OO0OO000OOOO00OOO, OOO0O0O00O00O00O0]
        return OOOO0OOOO0O0OO0O0


def sellOrder(OO00000O00O0OO000, O0000OOO0O00OO0O0):
    O00OOO0O00O00OO00 = getBalance(OO00000O00O0OO000)
    OO00000O0OOOO0OOO = {}
    OO00000O0OOOO0OOO['nonce'] = int(O00O000O00O0O000O.time() * 1000)
    OO00000O0OOOO0OOO['currencyPair'] = 'BTC_' + OO00000O00O0OO000
    OO00000O0OOOO0OOO['command'] = 'sell'
    OO00000O0OOOO0OOO['rate'] = O0000OOO0O00OO0O0
    OO00000O0OOOO0OOO['amount'] = O00OOO0O00O00OO00
    O0O0O000O0O00O000 = O0000OO0O0OO0OOO0(OO00000O0OOOO0OOO)
    OOOOOOOO0OOOO00O0 = OO0O000O0O00O00OO.new(secret, O0O0O000O0O00O000.encode('utf8'), O00OOOOO0O000OOO0.sha512).hexdigest()
    O0O00OOO00O00O0O0 = {'Content-Type': 'application/x-www-form-urlencoded','Key': key,'Sign': OOOOOOOO0OOOO00O0}
    OOOOO00O0OO00O000 = O00O00OO0000O0000.post('https://poloniex.com/tradingApi', data=OO00000O0OOOO0OOO, headers=O0O00OOO00O00O0O0)
    O000000O0OOOOO0O0 = O0OO000O0O0OOO000.loads(OOOOO00O0OO00O000.text)
    return O000000O0OOOOO0O0['orderNumber']


def marketHistory(O0O000OO0OOO00OO0):
    O000OOO00OO00OOOO = 'BTC_' + O0O000OO0OOO00OO0
    O0OOO00000OOO0OO0 = ' https://poloniex.com/public?command=returnTradeHistory&currencyPair=' + O000OOO00OO00OOOO
    OO00000O0OO000000 = O00O00OO0000O0000.get(O0OOO00000OOO0OO0)
    O0O00O0O0OO0OO00O = O0OO000O0O0OOO000.loads(OO00000O0OO000000.text)
    O0O000OO00O0O00O0 = []
    O0OO00OOO0O0OO000 = []
    for O00OOO0OOOO0OOO00 in O0O00O0O0OO0OO00O:
        if O00OOO0OOOO0OOO00['type'] == 'buy':
            O0O000OO00O0O00O0.append(O00OOO0OOOO0OOO00['rate'])
            O0OO00OOO0O0OO000.append(O00OOO0OOOO0OOO00['date'])

    OO0000OO0000O0OOO = O0OO00OOO0O0OO000[0]
    OO000OO00O000O00O = OO0000OO0000O0OOO[14:16]
    OOOO0O0OO000OO000 = 0
    OO0OO000OO0OOOOO0 = 0
    for O00OOO0OOOO0OOO00 in O0OO00OOO0O0OO000:
        if float(O00OOO0OOOO0OOO00[14:16]) == float(OO000OO00O000O00O) - 1:
            OOOO0O0OO000OO000 = O0OO00OOO0O0OO000.index(O00OOO0OOOO0OOO00)
            OO0OO000OO0OOOOO0 = O0O000OO00O0O00O0[OOOO0O0OO000OO000]
            break

    OO000O00O0000O0OO = 0
    OOOOO00O00OOO00OO = 0
    for O00OOO0OOOO0OOO00 in O0OO00OOO0O0OO000:
        if float(O00OOO0OOOO0OOO00[14:16]) == float(OO000OO00O000O00O) - 2:
            OO000O00O0000O0OO = O0OO00OOO0O0OO000.index(O00OOO0OOOO0OOO00)
            OOOOO00O00OOO00OO = O0O000OO00O0O00O0[OO000O00O0000O0OO]
            break

    print(OO0OO000OO0OOOOO0, OOOOO00O00OOO00OO)


def USD_BTC_Price():
    O00O00OO00OO000OO = 'https://poloniex.com/public?command=returnTicker'
    O00O0OO00000OO000 = O00O00OO0000O0000.get(O00O00OO00OO000OO)
    OOO00OOOOOO0OO0O0 = O0OO000O0O0OOO000.loads(O00O0OO00000OO000.text)
    OOO00OO0O0OO0OOO0 = OOO00OOOOOO0OO0O0['USDT_BTC']
    return OOO00OO0O0OO0OOO0['last']


def Trade(OO0OOO000O000OO00, O0OO0000O0O0O00O0, OOOO000O0OOOO00OO, OO0OO00OO0000OO00):
    O0000O0OO0O0000OO = O0OO0O0OOOOO0O00O.Fore.YELLOW + O0OO0O0OOOOO0O00O.Back.BLUE + '['
    O0O00000O0000O00O = ']' + O0OO0O0OOOOO0O00O.Style.RESET_ALL + ' '
    O000O0OOO0OOO000O = O0OO0O0OOOOO0O00O.Fore.YELLOW
    O000OOOOO00O0O000 = O0OO0O0OOOOO0O00O.Style.RESET_ALL
    print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Symbol: ' + O000OOOOO00O0O000 + OO0OOO000O000OO00)
    O0O0OO00OOOO0O00O = getTicker(OO0OOO000O000OO00)
    print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Current Price: ' + O000OOOOO00O0O000 + '%.8f' % float(O0O0OO00OOOO0O00O))
    OOOO0OO0O0O0O0OO0 = float(USD_BTC_Price())
    OOOOO00O00OOOOOOO = float(OOOO000O0OOOO00OO) * OOOO0OO0O0O0O0OO0
    print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Amount to use:  ' + O000OOOOO00O0O000 + '%.8f' % OOOO000O0OOOO00OO + ' | $%.2f' % OOOOO00O00OOOOOOO)
    O00OOO0O00O0O0000 = OOOO000O0OOOO00OO / float(O0O0OO00OOOO0O00O)
    print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Amount To Purchase: ' + O000OOOOO00O0O000 + '%.8f' % O00OOO0O00O0O0000)
    print('------------------------------------' + O000OOOOO00O0O000)
    print(' ')
    if float(OO0OO00OO0000OO00) != 0:
        OO0OOOO00OO0O0OO0, OO0O0OO00O00O000O = marketHistory(OO0OOO000O000OO00)
        O0O000O0OOO00OOOO = config.get('RiskMultiplier', OO0OO00OO0000OO00)
        O00O00OOOO0OO00O0 = OO0OOOO00OO0O0OO0 * float(O0O000O0OOO00OOOO)
        OOO000O0O00OOO000 = OO0O0OO00O00O000O * float(O0O000O0OOO00OOOO)
        if OO0OOOO00OO0O0OO0 != 0 and O0O0OO00OOOO0O00O + O0O0OO00OOOO0O00O * float(O0OO0000O0O0O00O0) >= O00O00OOOO0OO00O0:
            print('Buy conditions not met, canceling order.')
            print('price 1')
            O0OO00O000OOOO000 = O0O0OO00OOOO0O00O * OOOO0OO0O0O0O0OO0
            print('Last Price: BTC ' + '%.8f' % O0O0OO00OOOO0O00O + ' | $' + '%.2f' % O0OO00O000OOOO000)
            O0000000OO00O00O0 = O0O0OO00OOOO0O00O + O0O0OO00OOOO0O00O * float(O0OO0000O0O0O00O0)
            O0000OO0OOOOOO00O = O0000000OO00O00O0 * OOOO0OO0O0O0O0OO0
            print('Potential Sell Price: BTC ' + '%.2f' % O0000000OO00O00O0 + ' | $' + '%.2f' % O0000OO0OOOOOO00O)
            O0OO0OOOOOO00O00O = O00O00OOOO0OO00O0 * OOOO0OO0O0O0O0OO0
            print('Price Limit: BTC ' + '%.8f' % O00O00OOOO0OO00O0 + ' | $' + '%.2f' % O0OO0OOOOOO00O00O)
            O0000O0OO0O0000OO = getTicker(OO0OOO000O000OO00)
            OOO0OOO0O0O00O000 = O0000O0OO0O0000OO * OOOO0OO0O0O0O0OO0
            print('Current Price: BTC ' + '%.8f' % O0000O0OO0O0000OO + ' | $' + '%.2f' % OOO0OOO0O0O00O000)
            return
        if OO0O0OO00O00O000O != 0 and O0O0OO00OOOO0O00O + O0O0OO00OOOO0O00O * float(O0OO0000O0O0O00O0) >= OOO000O0O00OOO000:
            print('Buy conditions not met, canceling order.')
            print('price 2')
            O0OO00O000OOOO000 = O0O0OO00OOOO0O00O * OOOO0OO0O0O0O0OO0
            print('Last Price: BTC ' + '%.8f' % O0O0OO00OOOO0O00O + ' | $' + '%.2f' % O0OO00O000OOOO000)
            O0000000OO00O00O0 = O0O0OO00OOOO0O00O + O0O0OO00OOOO0O00O * float(O0OO0000O0O0O00O0)
            O0000OO0OOOOOO00O = O0000000OO00O00O0 * OOOO0OO0O0O0O0OO0
            print('Potential Sell Price: BTC ' + '%.2f' % O0000000OO00O00O0 + ' | $' + '%.2f' % O0000OO0OOOOOO00O)
            O0OO0OOOOOO00O00O = O00O00OOOO0OO00O0 * OOOO0OO0O0O0O0OO0
            print('Price Limit: BTC ' + '%.8f' % O00O00OOOO0OO00O0 + ' | $' + '%.2f' % O0OO0OOOOOO00O00O)
            O0000O0OO0O0000OO = getTicker(OO0OOO000O000OO00)
            OOO0OOO0O0O00O000 = O0000O0OO0O0000OO * OOOO0OO0O0O0O0OO0
            print('Current Price: BTC ' + '%.8f' % O0000O0OO0O0000OO + ' | $' + '%.2f' % OOO0OOO0O0O00O000)
            return
        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Placing Order...')
        OOOOO00O0OOO0OO0O = buyOrder(OO0OOO000O000OO00, O00OOO0O00O0O0000)
        O00O0OOO00OO0O0OO = getOrder(OO0OOO000O000OO00)
        for O00000OO000O0O0O0 in O00O0OOO00OO0O0OO:
            if O00000OO000O0O0O0['tradeID'] == OOOOO00O0OOO0OO0O[0]:
                O0O0OOO00O0OOO00O = float(O00000OO000O0O0O0['rate'])

        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Order Successful!')
        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Price: ' + O000OOOOO00O0O000 + '%.8f' % O0O0OOO00O0OOO00O)
        print('------------------------------------')
        print(' ')
        O0O0000000O0OO0OO = O0O0OOO00O0OOO00O * float(O0OO0000O0O0O00O0)
        O0OOOO0O00OOOO0O0 = O0O0OOO00O0OOO00O + O0O0000000O0OO0OO
        OO0O0O0OOOOO0OO0O = O0OOOO0O00OOOO0O0 / (1 + float(SellPercent))
        O00000O00000O0000 = sellOrder(OO0OOO000O000OO00, OO0O0O0OOOOO0OO0O)
        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Sell Order Placed!')
        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Price: ' + O000OOOOO00O0O000 + '%.8f' % OO0O0O0OOOOO0OO0O)
        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Patiently Waiting...' + O000OOOOO00O0O000)
        O0OO0O00O0OO0OO00 = True
        while 1:
            if O0OO0O00O0OO0OO00:
                O00O0OOO00OO0O0OO = getOrder(OO0OOO000O000OO00)
                for O00000OO000O0O0O0 in O00O0OOO00OO0O0OO:
                    if O00000OO000O0O0O0['tradeID'] == O00000O00000O0000:
                        print('------------------------------------')
                        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Sold!')
                        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Bitcoin Balance: ' + O000OOOOO00O0O000 + '%.8f' % getBalance('btc'))
                        OOOO0OO0O0O0O0OO0 = USD_BTC_Price()
                        print(O0000O0OO0O0000OO + OO0000OOOOO000OO0('%H:%M:%S', OOOOOOOO0O0000OOO()) + O0O00000O0000O00O + O000O0OOO0OOO000O + 'Bitcoin Balance in USD: ' + O000OOOOO00O0O000 + str(getBalance('btc') * OOOO0OO0O0O0O0OO0))
                        O0OO0O00O0OO0OO00 = False


def main():
    OO0O00O0OOO0OO000 = getBalance('BTC')
    OOO0000OOO0OOOOO0 = USD_BTC_Price()
    OOO00O00OOO0OO0OO = float(OO0O00O0OOO0OO000) * float(OOO0000OOO0OOOOO0)
    print(O0OO0O0OOOOO0O00O.Fore.RED + '_____________________________________________________________________')
    print(O0OO0O0OOOOO0O00O.Fore.RED + 'Balance (BTC): ' + str(OO0O00O0OOO0OO000))
    print(O0OO0O0OOOOO0O00O.Fore.RED + 'Balance in USD: ' + str(OOO00O00OOO0OO0OO))
    print(O0OO0O0OOOOO0O00O.Fore.RED + '_____________________________________________________________________')
    if O0OO0OO00OO00O0O0.system() == 'Windows':
        O000O0O00O0000O00 = input('[1] Risk Multiplier: ')
        OOO0O0000OOOOO0OO = input('[2] % of bitcoin to spend: ')
        OOOO0OO0O0OOOOOO0 = input('[3] Profit %: ')
        O000000OO0000OO0O = input('[4] Coin: ')
    else:
        O000O0O00O0000O00 = input(O0OO0O0OOOOO0O00O.Fore.CYAN + '[1] Risk Multiplier: ')
        OOO0O0000OOOOO0OO = input(O0OO0O0OOOOO0O00O.Fore.CYAN + '[2] % of bitcoin to spend: ')
        OOOO0OO0O0OOOOOO0 = input(O0OO0O0OOOOO0O00O.Fore.CYAN + '[3] Profit %: ')
        O000000OO0000OO0O = input(O0OO0O0OOOOO0O00O.Fore.CYAN + '[4] Coin: ')
    if len(OOOO0OO0O0OOOOOO0) <= 1:
        OOOO0OO0O0OOOOOO0 = '0.0' + OOOO0OO0O0OOOOOO0
    else:
        if len(OOOO0OO0O0OOOOOO0) <= 2:
            OOOO0OO0O0OOOOOO0 = '0.' + OOOO0OO0O0OOOOOO0
        else:
            if len(OOOO0OO0O0OOOOOO0) <= 3:
                OOOO0OO0O0OOOOOO0 = OOOO0OO0O0OOOOOO0[0] + '.' + OOOO0OO0O0OOOOOO0[1:]
            else:
                OOOO0OO0O0OOOOOO0 = OOOO0OO0O0OOOOOO0[0:2]
            if len(OOO0O0000OOOOO0OO) <= 1:
                OOO0O0000OOOOO0OO = '0.0' + OOO0O0000OOOOO0OO
            else:
                if len(OOO0O0000OOOOO0OO) <= 2:
                    OOO0O0000OOOOO0OO = '0.' + OOO0O0000OOOOO0OO
                else:
                    if len(OOO0O0000OOOOO0OO) <= 3:
                        OOO0O0000OOOOO0OO = OOO0O0000OOOOO0OO[0] + '.' + OOO0O0000OOOOO0OO[1:]
                    else:
                        OOO0O0000OOOOO0OO = OOO0O0000OOOOO0OO[0:2]
                    OOO0O00OO0O00OO0O = float(OO0O00O0OOO0OO000) * float(OOO0O0000OOOOO0OO)
                    Trade(O000000OO0000OO0O.upper(), OOOO0OO0O0OOOOOO0, OOO0O00OO0O00OO0O, O000O0O00O0000O00)
