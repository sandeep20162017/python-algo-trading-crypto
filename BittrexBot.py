
import json as OOO0000OO000O0000, requests as O0OO00OOO000OO000
from time import strftime as OOO0O0OOOOO00O000, gmtime as OO0000OO0OO00O0O0
import time as OO000OOOOO000OOO0, hmac as OO0000OO00O0O0000, hashlib as O0O0O00O0O00O0O00, pdb as O0O0O0O000O00OO0O, platform as OO0OO0O000000000O, utils as O00O00OO0000OO000, colorama as OO0000OO0O0O0OOOO
try:
    from urllib import urlencode as OO000OO0O00O0OOOO
    from urlparse import urljoin as OOO0O0OO0O0O00O0O
except ImportError:
    from urllib.parse import urlencode as OO000OO0O00O0OOOO
    from urllib.parse import urljoin as OOO0O0OO0O0O00O0O

import configparser as OOOOO000O0O000O00, sys as O0O00OOOOOOOOO0OO
config = OOOOO000O0O000O00.ConfigParser()
config.readfp(open('config.txt'))
key = config.get('Bittrex', 'Key')
secret = config.get('Bittrex', 'Secret')
BuyPercent = config.get('PriceLip', 'BuyPercent')
SellPercent = config.get('PriceLip', 'SellPercent')
BuyPercent, SellPercent = O00O00OO0000OO000.percentageFix(BuyPercent, SellPercent)
nonce = str(int(OO000OOOOO000OOO0.time() * 1000))

def getTicker(O000OOO00O000OOO0):
    OOO0O000O0O0O00O0 = 'https://bittrex.com/api/v1.1/public/getticker?market=' + 'btc-' + O000OOO00O000OOO0 + '&apikey=' + key + '&nonce=' + nonce
    OOOOOOOO0O0OOOOO0 = O0OO00OOO000OO000.get(OOO0O000O0O0O00O0, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), OOO0O000O0O0O00O0.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    OO00O00OO0O00000O = OOO0000OO000O0000.loads(OOOOOOOO0O0OOOOO0.text)
    O0OO0O0O0OOOOO00O = OO00O00OO0O00000O['result']
    return O0OO0O0O0OOOOO00O['Last']


def getTickerSell(OOOO00OOOOOO000OO):
    O0OO000O0O00O00O0 = 'https://bittrex.com/api/v1.1/public/getticker?market=' + 'btc-' + OOOO00OOOOOO000OO + '&apikey=' + key + '&nonce=' + nonce
    O00O000OO00000O0O = O0OO00OOO000OO000.get(O0OO000O0O00O00O0, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), O0OO000O0O00O00O0.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    OOO0O000000O0O0OO = OOO0000OO000O0000.loads(O00O000OO00000O0O.text)
    OOOOO0O00O0O00O0O = OOO0O000000O0O0OO['result']
    return OOOOO0O00O0O00O0O['Bid']


def getBalance(O0000OOO0OO00O0OO):
    OO0000OOOOO000O0O = 'https://bittrex.com/api/v1.1/account/getbalance?currency=' + O0000OOO0OO00O0OO + '&apikey=' + key + '&nonce=' + nonce
    OOO00OO0000OO00OO = O0OO00OOO000OO000.get(OO0000OOOOO000O0O, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), OO0000OOOOO000O0O.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    OOO00O00OOO0O0OO0 = OOO0000OO000O0000.loads(OOO00OO0000OO00OO.text)
    O0OOOOO0OO0O0O00O = OOO00O00OOO0O0OO0['result']
    return O0OOOOO0OO0O0O00O['Available']


def getOrder(OO000OO0OO000000O):
    O00OOO00O0OOOOO00 = 'https://bittrex.com/api/v1.1/account/getorder?uuid=' + OO000OO0OO000000O + '&apikey=' + key + '&nonce=' + nonce
    O000OOO0OOOO0OO0O = O0OO00OOO000OO000.get(O00OOO00O0OOOOO00, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), O00OOO00O0OOOOO00.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    O00O0OO000OOOO0OO = OOO0000OO000O0000.loads(O000OOO0OOOO0OO0O.text)
    O0000OO000000OO0O = O00O0OO000OOOO0OO['result']
    return O0000OO000000OO0O


def buyOrder(OO00OO0O0O0000O0O, OOO0OO000O0O00000):
    O00OOOO0O0OOOO000 = getTicker(OO00OO0O0O0000O0O)
    OOOO0OOO0O0O0000O = O00OOOO0O0OOOO000 * (1 + float(BuyPercent))
    O00OO0000OO00OO00 = 'https://bittrex.com/api/v1.1/market/buylimit?market=' + 'btc-' + OO00OO0O0O0000O0O + '&quantity=' + str(OOO0OO000O0O00000) + '&rate=' + str(OOOO0OOO0O0O0000O) + '&apikey=' + key + '&nonce=' + nonce
    OOO0000000000OOO0 = O0OO00OOO000OO000.get(O00OO0000OO00OO00, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), O00OO0000OO00OO00.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    OO0OOO000O0OO0OOO = OOO0000OO000O0000.loads(OOO0000000000OOO0.text)
    if OO0OOO000O0OO0OOO['success'] == False:
        print('Error!')
        O0O00OOOOOOOOO0OO.exit('Message: ' + OO0OOO000O0OO0OOO['message'])
    else:
        O00O0OOO0O00OOO00 = OO0OOO000O0OO0OOO['result']['uuid']
        O0OOOO0OO0O0OO00O = [O00O0OOO0O00OOO00, OOOO0OOO0O0O0000O]
        return O0OOOO0OO0O0OO00O


def sellOrder(OOO0OO00O000OO000, OOOO00OOOO0OO0OOO):
    O0OOO000OOO0O0OOO = 'btc-' + OOO0OO00O000OO000
    OOO0OOOOOO0OO0O0O = getBalance(OOO0OO00O000OO000)
    OOO0OOO00OOOOO000 = 'https://bittrex.com/api/v1.1/market/selllimit?market=' + O0OOO000OOO0O0OOO + '&quantity=' + str(OOO0OOOOOO0OO0O0O) + '&rate=' + str(OOOO00OOOO0OO0OOO) + '&apikey=' + key + '&nonce=' + nonce
    O00O00O0000O00000 = O0OO00OOO000OO000.get(OOO0OOO00OOOOO000, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), OOO0OOO00OOOOO000.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    O0O000000O0OOO0OO = OOO0000OO000O0000.loads(O00O00O0000O00000.text)
    OOO0O0OOOOOO000OO = O0O000000O0OOO0OO['result']['uuid']
    return OOO0O0OOOOOO000OO


def marketHistory(O00O00O0O0OO0000O):
    O0OO000000O0O0OO0 = 'btc-' + O00O00O0O0OO0000O
    OOOO0O0OOOOO0OO00 = 'https://bittrex.com/api/v1.1/public/getmarkethistory?Market=' + O0OO000000O0O0OO0 + '&apikey=' + key + '&nonce=' + nonce
    O0000O00O0O0000OO = O0OO00OOO000OO000.get(OOOO0O0OOOOO0OO00, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), OOOO0O0OOOOO0OO00.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    OO0O00OO0O0O000OO = OOO0000OO000O0000.loads(O0000O00O0O0000OO.text)
    O0OO00OO00OO0000O = OO0O00OO0O0O000OO['result']
    with open('mh.json', 'w') as (OOOO00000OO000OOO):
        OOO0000OO000O0000.dump(OO0O00OO0O0O000OO, OOOO00000OO000OOO)
    O0OO0O00000000OO0 = []
    O0O00O00OO0OOOOO0 = []
    for O00OO0OO0O000OOOO in O0OO00OO00OO0000O:
        O0OO0O00000000OO0.append(O00OO0OO0O000OOOO['Price'])
        O0O00O00OO0OOOOO0.append(O00OO0OO0O000OOOO['TimeStamp'])

    O00000O0O00OO0OOO = O0O00O00OO0OOOOO0[0]
    OO000O000O000O0OO = O00000O0O00OO0OOO[14:16]
    OO0O0OO0OO0000OO0 = 0
    O00O0O0OOOO0O0000 = 0
    for O00OO0OO0O000OOOO in O0O00O00OO0OOOOO0:
        if float(O00OO0OO0O000OOOO[14:16]) == float(OO000O000O000O0OO) - 1:
            OO0O0OO0OO0000OO0 = O0O00O00OO0OOOOO0.index(O00OO0OO0O000OOOO)
            O00O0O0OOOO0O0000 = O0OO0O00000000OO0[OO0O0OO0OO0000OO0]
            break

    O00O0000O0OO00O0O = 0
    O0OOOOOO0OO0O000O = 0
    for O00OO0OO0O000OOOO in O0O00O00OO0OOOOO0:
        if float(O00OO0OO0O000OOOO[14:16]) == float(OO000O000O000O0OO) - 2:
            O00O0000O0OO00O0O = O0O00O00OO0OOOOO0.index(O00OO0OO0O000OOOO)
            O0OOOOOO0OO0O000O = O0OO0O00000000OO0[O00O0000O0OO00O0O]
            break

    return (
     O00O0O0OOOO0O0000, O0OOOOOO0OO0O000O)


def USD_BTC_Price():
    O0O0O000000OOOOO0 = 'https://bittrex.com/api/v1.1/public/getticker?market=' + 'USDT-BTC' + '&apikey=' + key + '&nonce=' + nonce
    O0000OOO0OOOO00O0 = O0OO00OOO000OO000.get(O0O0O000000OOOOO0, headers={'apisign': OO0000OO00O0O0000.new(secret.encode(), O0O0O000000OOOOO0.encode(), O0O0O00O0O00O0O00.sha512).hexdigest()})
    O0OOOOO000O00OO00 = OOO0000OO000O0000.loads(O0000OOO0OOOO00O0.text)
    O0OOOOOO00OOO0OO0 = O0OOOOO000O00OO00['result']
    return O0OOOOOO00OOO0OO0['Ask']


def Trade(O00OOOO0000O0O0OO, O0O0O0OOOO0OOOOOO, O0O00O000OOO00O0O, OOO0O00OOO0O00000):
    O00OOOO0O000O0000 = OO0000OO0O0O0OOOO.Fore.YELLOW + OO0000OO0O0O0OOOO.Back.BLUE + '['
    O000OOO0000O0O0O0 = ']' + OO0000OO0O0O0OOOO.Style.RESET_ALL + ' '
    OOOOOOOOO00OOO00O = OO0000OO0O0O0OOOO.Fore.YELLOW
    O0O000O00O0OO000O = OO0000OO0O0O0OOOO.Style.RESET_ALL
    print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Symbol: ' + O0O000O00O0OO000O + O00OOOO0000O0O0OO)
    OO00OO0OO00000000 = getTicker(O00OOOO0000O0O0OO)
    print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Current Price: ' + O0O000O00O0OO000O + '%.8f' % OO00OO0OO00000000)
    O000000O0OO0O00O0 = USD_BTC_Price()
    OO0OO0O000O0O0OO0 = getBalance('btc')
    print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Bitcoin Balance:  ' + O0O000O00O0OO000O + '%.8f' % OO0OO0O000O0O0OO0 + ' | $' + str(OO0OO0O000O0O0OO0 * O000000O0OO0O00O0))
    print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Amount to use:  ' + O0O000O00O0OO000O + '%.8f' % O0O00O000OOO00O0O + ' | $' + str(O0O00O000OOO00O0O * O000000O0OO0O00O0))
    OOOOO0O0O00000OOO = O0O00O000OOO00O0O / OO00OO0OO00000000
    print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Amount To Purchase: ' + O0O000O00O0OO000O + '%.8f' % OOOOO0O0O00000OOO)
    print('------------------------------------' + O0O000O00O0OO000O)
    print(' ')
    if float(OOO0O00OOO0O00000) != 0:
        O00OOO00OO0O00O0O, O0O0OOO000O000O0O = marketHistory(O00OOOO0000O0O0OO)
        OOO0O00O0OO0OOOO0 = config.get('RiskMultiplier', OOO0O00OOO0O00000)
        OO000OO00O0O0O0OO = O00OOO00OO0O00O0O * float(OOO0O00O0OO0OOOO0)
        O00OO00O0OO0O000O = O0O0OOO000O000O0O * float(OOO0O00O0OO0OOOO0)
        if O00OOO00OO0O00O0O != 0 and OO00OO0OO00000000 + OO00OO0OO00000000 * float(O0O0O0OOOO0OOOOOO) >= OO000OO00O0O0O0OO:
            print('Buy conditions not met, canceling order.')
            print('price 1')
            O0OO0OO00O0OOO0OO = OO00OO0OO00000000 * O000000O0OO0O00O0
            print('Last Price: BTC ' + '%.8f' % OO00OO0OO00000000 + ' | $' + '%.2f' % O0OO0OO00O0OOO0OO)
            O00000OOOOOO00O00 = OO00OO0OO00000000 + OO00OO0OO00000000 * float(O0O0O0OOOO0OOOOOO)
            OOOOO00O0O0O0000O = O00000OOOOOO00O00 * O000000O0OO0O00O0
            print('Potential Sell Price: BTC ' + '%.2f' % O00000OOOOOO00O00 + ' | $' + '%.2f' % OOOOO00O0O0O0000O)
            O000O000OOOO00O0O = OO000OO00O0O0O0OO * O000000O0OO0O00O0
            print('Price Limit: BTC ' + '%.8f' % OO000OO00O0O0O0OO + ' | $' + '%.2f' % O000O000OOOO00O0O)
            O00OOOO0O000O0000 = getTicker(O00OOOO0000O0O0OO)
            OOO0OO000OOO00OOO = O00OOOO0O000O0000 * O000000O0OO0O00O0
            print('Current Price: BTC ' + '%.8f' % O00OOOO0O000O0000 + ' | $' + '%.2f' % OOO0OO000OOO00OOO)
            return
        if O0O0OOO000O000O0O != 0 and OO00OO0OO00000000 + OO00OO0OO00000000 * float(O0O0O0OOOO0OOOOOO) >= O00OO00O0OO0O000O:
            print('Buy conditions not met, canceling order.')
            print('price 2')
            O0OO0OO00O0OOO0OO = OO00OO0OO00000000 * O000000O0OO0O00O0
            print('Last Price: BTC ' + '%.8f' % OO00OO0OO00000000 + ' | $' + '%.2f' % O0OO0OO00O0OOO0OO)
            O00000OOOOOO00O00 = OO00OO0OO00000000 + OO00OO0OO00000000 * float(O0O0O0OOOO0OOOOOO)
            OOOOO00O0O0O0000O = O00000OOOOOO00O00 * O000000O0OO0O00O0
            print('Potential Sell Price: BTC ' + '%.2f' % O00000OOOOOO00O00 + ' | $' + '%.2f' % OOOOO00O0O0O0000O)
            O000O000OOOO00O0O = OO000OO00O0O0O0OO * O000000O0OO0O00O0
            print('Price Limit: BTC ' + '%.8f' % OO000OO00O0O0O0OO + ' | $' + '%.2f' % O000O000OOOO00O0O)
            O00OOOO0O000O0000 = getTicker(O00OOOO0000O0O0OO)
            OOO0OO000OOO00OOO = O00OOOO0O000O0000 * O000000O0OO0O00O0
            print('Current Price: BTC ' + '%.8f' % O00OOOO0O000O0000 + ' | $' + '%.2f' % OOO0OO000OOO00OOO)
            return
        OOO00OOO00OOOOOO0 = buyOrder(O00OOOO0000O0O0OO, OOOOO0O0O00000OOO)
        O00OOOO00OO0O0O0O = True
        print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Placing Order...')
        while O00OOOO00OO0O0O0O:
            O00OOOOO00OO0O00O = getOrder(str(OOO00OOO00OOOOOO0[0]))
            if O00OOOOO00OO0O00O['IsOpen'] == False:
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Order Successful!')
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Price: ' + O0O000O00O0OO000O + '%.8f' % O00OOOOO00OO0O00O['Limit'])
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Bitcoin Balance: ' + O0O000O00O0OO000O + '%.8f' % getBalance('btc'))
                print('------------------------------------')
                print(' ')
                O00OOOO00OO0O0O0O = False

        O00OOOOO00OO0O00O = getOrder(str(OOO00OOO00OOOOOO0[0]))
        OO0O0OOOOOOOO00O0 = O00OOOOO00OO0O00O['Limit'] * float(O0O0O0OOOO0OOOOOO)
        O00O0OOOOOO0000O0 = O00OOOOO00OO0O00O['Limit'] + OO0O0OOOOOOOO00O0
        OO000000OOOO0OOO0 = O00O0OOOOOO0000O0 / (1 + float(SellPercent))
        OO00OOO0O0O000OO0 = sellOrder(O00OOOO0000O0O0OO, OO000000OOOO0OOO0)
        print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Sell Order Placed!')
        print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Price: ' + O0O000O00O0OO000O + '%.8f' % OO000000OOOO0OOO0)
        print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Patiently Waiting...' + O0O000O00O0OO000O)
        O00OO0O0O0OO000OO = True
        while O00OO0O0O0OO000OO:
            O00OOOOO00OO0O00O = getOrder(str(OO00OOO0O0O000OO0))
            print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Current Price: ' + O0O000O00O0OO000O + '%.8f' % getTicker(O00OOOO0000O0O0OO), end='\r')
            if O00OOOOO00OO0O00O['IsOpen'] == False:
                print('------------------------------------')
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Sold!')
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Bitcoin Balance: ' + O0O000O00O0OO000O + '%.8f' % getBalance('btc'))
                O000000O0OO0O00O0 = USD_BTC_Price()
                print(O00OOOO0O000O0000 + OOO0O0OOOOO00O000('%H:%M:%S', OO0000OO0OO00O0O0()) + O000OOO0000O0O0O0 + OOOOOOOOO00OOO00O + 'Bitcoin Balance in USD: ' + O0O000O00O0OO000O + str(getBalance('btc') * O000000O0OO0O00O0))
                O00OO0O0O0OO000OO = False


def main():
    OO0O000O0O00O00O0 = getBalance('btc')
    O000O0OO0O0O0000O = USD_BTC_Price()
    OO00OOO000O00O0O0 = OO0O000O0O00O00O0 * O000O0OO0O0O0000O
    print(OO0000OO0O0O0OOOO.Fore.RED + '_____________________________________________________________________')
    print(OO0000OO0O0O0OOOO.Fore.RED + 'Balance (BTC): ' + str(OO0O000O0O00O00O0))
    print(OO0000OO0O0O0OOOO.Fore.RED + 'Balance in USD: ' + str(OO00OOO000O00O0O0))
    print(OO0000OO0O0O0OOOO.Fore.RED + '_____________________________________________________________________')
    if OO0OO0O000000000O.system() == 'Windows':
        O000OO0OOO00OO0OO = input('[1] Risk Multiplier: ')
        O0O0OO0OOOOO000O0 = input('[2] % of bitcoin to spend: ')
        OO0OO0O0000O00000 = input('[3] Profit %: ')
        O00OO0O00000O0OOO = input('[4] Coin: ')
    else:
        O000OO0OOO00OO0OO = input(OO0000OO0O0O0OOOO.Fore.CYAN + '[1] Risk Multiplier: ')
        O0O0OO0OOOOO000O0 = input(OO0000OO0O0O0OOOO.Fore.CYAN + '[2] % of bitcoin to spend: ')
        OO0OO0O0000O00000 = input(OO0000OO0O0O0OOOO.Fore.CYAN + '[3] Profit %: ')
        O00OO0O00000O0OOO = input(OO0000OO0O0O0OOOO.Fore.CYAN + '[4] Coin: ')
    if len(OO0OO0O0000O00000) <= 1:
        OO0OO0O0000O00000 = '0.0' + OO0OO0O0000O00000
    else:
        if len(OO0OO0O0000O00000) <= 2:
            OO0OO0O0000O00000 = '0.' + OO0OO0O0000O00000
        else:
            if len(OO0OO0O0000O00000) <= 3:
                OO0OO0O0000O00000 = OO0OO0O0000O00000[0] + '.' + OO0OO0O0000O00000[1:]
            else:
                OO0OO0O0000O00000 = OO0OO0O0000O00000[0:2]
            if len(O0O0OO0OOOOO000O0) <= 1:
                O0O0OO0OOOOO000O0 = '0.0' + O0O0OO0OOOOO000O0
            else:
                if len(O0O0OO0OOOOO000O0) <= 2:
                    O0O0OO0OOOOO000O0 = '0.' + O0O0OO0OOOOO000O0
                else:
                    if len(O0O0OO0OOOOO000O0) <= 3:
                        O0O0OO0OOOOO000O0 = O0O0OO0OOOOO000O0[0] + '.' + O0O0OO0OOOOO000O0[1:]
                    else:
                        O0O0OO0OOOOO000O0 = O0O0OO0OOOOO000O0[0:2]
                    O0OO0O00OO00000O0 = OO0O000O0O00O00O0 * float(O0O0OO0OOOOO000O0)
                    Trade(O00OO0O00000O0OOO.lower(), OO0OO0O0000O00000, O0OO0O00OO00000O0, O000OO0OOO00OO0OO)
