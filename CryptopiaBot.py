import json as OO0000OOO0000OOOO, requests as O0O00O000O000OOO0
from time import strftime as O0OOOOO0O000O000O, gmtime as OO00O00OO00O0OOOO
import time as OOOOO00OO000000O0, hmac as OOOO00OOO00OOO0O0, hashlib as O00O0000OO0O0O0O0, pdb as OO0OOOO00000O00OO, utils as O000OOOO0OO0OOO0O, colorama as O0O0OOO00OO0O0OO0, platform as O0OO00OOO000O00O0, random as O0OOO0OOO00O00OO0
O00OO0OOOOOOO00OO = __import__('urllib.parse', globals(), locals())
import datetime as OO00OO0OOOOO00OO0, base64 as O0OOOO0O0O0O0O0OO, configparser as OO00000000OO000O0, sys as OOOOOOOOO0O00O00O
config = OO00000000OO000O0.ConfigParser()
config.readfp(open('config.txt'))
key = config.get('Cryptopia', 'Key')
secret = config.get('Cryptopia', 'Secret')
BuyPercent = config.get('PriceLip', 'BuyPercent')
SellPercent = config.get('PriceLip', 'SellPercent')
BuyPercent, SellPercent = O000OOOO0OO0OOO0O.percentageFix(BuyPercent, SellPercent)

def make_nonce():
    return str(O0OOO0OOO00O00OO0.randint(0, 100000000))


def getTicker(OO0O0O00000O0000O):
    OO00O0OOOO0O0OO00 = 'https://www.cryptopia.co.nz/api/GetMarket/' + OO0O0O00000O0000O + '_BTC'
    OO0O0OOOOOOOO0O00 = O0O00O000O000OOO0.get(OO00O0OOOO0O0OO00)
    O00OO0O0O00000O0O = OO0000OOO0000OOOO.loads(OO0O0OOOOOOOO0O00.text)
    O00000000000O00OO = O00OO0O0O00000O0O['Data']
    return O00000000000O00OO['AskPrice']


def getBalance(OOOO000000O00OO00):
    O00OOOO0O00O00O0O = 'https://www.cryptopia.co.nz/Api/GetBalance'
    O000000OO0OO0OO0O = make_nonce()
    OOOO0000OO0O000OO = OO0000OOO0000OOOO.dumps({'Currency': OOOO000000O00OO00})
    OO0O0000000O0OOO0 = O00O0000OO0O0O0O0.md5()
    OO0O0000000O0OOO0.update(OOOO0000OO0O000OO.encode('utf-8'))
    O0000OOO00O0000OO = O0OOOO0O0O0O0O0OO.b64encode(OO0O0000000O0OOO0.digest()).decode('utf-8')
    O000O00O0OO0OOO0O = key + 'POST' + O00OO0OOOOOOO00OO.parse.quote_plus(O00OOOO0O00O00O0O).lower() + O000000OO0OO0OO0O + O0000OOO00O0000OO
    O0OO000OOOOO000OO = O0OOOO0O0O0O0O0OO.b64encode(OOOO00OOO00OOO0O0.new(O0OOOO0O0O0O0O0OO.b64decode(secret), O000O00O0OO0OOO0O.encode('utf-8'), O00O0000OO0O0O0O0.sha256).digest())
    O000OOO00O0OO0000 = 'amx ' + key + ':' + O0OO000OOOOO000OO.decode('utf-8') + ':' + O000000OO0OO0OO0O
    OOOO0000O000O0O00 = {'Authorization': O000OOO00O0OO0000,'Content-Type': 'application/json; charset=utf-8'}
    OO00000OO0OOO00O0 = O0O00O000O000OOO0.post(O00OOOO0O00O00O0O, data=OOOO0000OO0O000OO, headers=OOOO0000O000O0O00)
    OOOO0O0O00O00OOOO = OO0000OOO0000OOOO.loads(OO00000OO0OOO00O0.text)
    for O0OOOOO0O0OO0O00O in OOOO0O0O00O00OOOO['Data']:
        return O0OOOOO0O0OO0O00O['Available']


def getOrder(O00OO0O0000OO0OO0):
    OOO0OOOOOO0OO0000 = 'https://www.cryptopia.co.nz/api/GetTradeHistory'
    O0OO0OOOO00OO000O = make_nonce()
    O00O000OOOO0OO0O0 = OO0000OOO0000OOOO.dumps({'Market': O00OO0O0000OO0OO0,'Count': 10})
    O0OOOO00O0O0O000O = O00O0000OO0O0O0O0.md5()
    O0OOOO00O0O0O000O.update(O00O000OOOO0OO0O0.encode('utf-8'))
    O00O0000OOO00O0O0 = O0OOOO0O0O0O0O0OO.b64encode(O0OOOO00O0O0O000O.digest()).decode('utf-8')
    OO0O0000OO0OOOOO0 = key + 'POST' + O00OO0OOOOOOO00OO.parse.quote_plus(OOO0OOOOOO0OO0000).lower() + O0OO0OOOO00OO000O + O00O0000OOO00O0O0
    OO00OOOO0O0OO0OOO = O0OOOO0O0O0O0O0OO.b64encode(OOOO00OOO00OOO0O0.new(O0OOOO0O0O0O0O0OO.b64decode(secret), OO0O0000OO0OOOOO0.encode('utf-8'), O00O0000OO0O0O0O0.sha256).digest())
    OO0O00O0O0O0O0O00 = 'amx ' + key + ':' + OO00OOOO0O0OO0OOO.decode('utf-8') + ':' + O0OO0OOOO00OO000O
    OOOO00OOOO00O0O0O = {'Authorization': OO0O00O0O0O0O0O00,'Content-Type': 'application/json; charset=utf-8'}
    O00O0O0O0OOO00OOO = O0O00O000O000OOO0.post(OOO0OOOOOO0OO0000, data=O00O000OOOO0OO0O0, headers=OOOO00OOOO00O0O0O)
    OOOO000OOO0OO0O00 = O00O0O0O0OOO00OOO.json()
    return OOOO000OOO0OO0O00['Data']


def buyOrder(OOO00O0OO0O0O0O0O, OOOOOO0O0OO00OO0O):
    OOOO0OOO000OO000O = getTicker(OOO00O0OO0O0O0O0O)
    OOOO00000000O0O0O = OOOO0OOO000OO000O * (1 + float(BuyPercent))
    O0O0OOO0OO0000000 = 'https://www.cryptopia.co.nz/Api/SubmitTrade'
    OOOO00OO00O0OO00O = make_nonce()
    OOO00O0OO0O0O0O0O = OOO00O0OO0O0O0O0O + '/BTC'
    O0O000O00000OOO0O = OO0000OOO0000OOOO.dumps({'Market': OOO00O0OO0O0O0O0O,'Type': 'Buy','Rate': OOOO00000000O0O0O,'Amount': OOOOOO0O0OO00OO0O})
    O00OO00OOO0000000 = O00O0000OO0O0O0O0.md5()
    O00OO00OOO0000000.update(O0O000O00000OOO0O.encode('utf-8'))
    O00O0OOO0O0O00OO0 = O0OOOO0O0O0O0O0OO.b64encode(O00OO00OOO0000000.digest()).decode('utf-8')
    OOOOO000000000O00 = key + 'POST' + O00OO0OOOOOOO00OO.parse.quote_plus(O0O0OOO0OO0000000).lower() + OOOO00OO00O0OO00O + O00O0OOO0O0O00OO0
    OOO0OO00OO00OOO00 = O0OOOO0O0O0O0O0OO.b64encode(OOOO00OOO00OOO0O0.new(O0OOOO0O0O0O0O0OO.b64decode(secret), OOOOO000000000O00.encode('utf-8'), O00O0000OO0O0O0O0.sha256).digest())
    OOO00000O0O00O0OO = 'amx ' + key + ':' + OOO0OO00OO00OOO00.decode('utf-8') + ':' + OOOO00OO00O0OO00O
    O00OO00OOOOOOOO00 = {'Authorization': OOO00000O0O00O0OO,'Content-Type': 'application/json; charset=utf-8'}
    O0OOOOO0OOOOO000O = O0O00O000O000OOO0.post(O0O0OOO0OO0000000, data=O0O000O00000OOO0O, headers=O00OO00OOOOOOOO00)
    OO00OOOO0O00000OO = O0OOOOO0OOOOO000O.json()
    if OO00OOOO0O00000OO['Success'] == False:
        print('Error!')
        OOOOOOOOO0O00O00O.exit('Message: ' + OO00OOOO0O00000OO['Error'])
    else:
        O00O000O00OO0OO00 = OO00OOOO0O00000OO['Data']['FilledOrders'][0]
        OO0O000000O0OOO00 = [O00O000O00OO0OO00, OOOO00000000O0O0O]
        return OO0O000000O0OOO00


def sellOrder(OO0OO000OOO0000O0, O0O0OOOO0000O0OOO):
    O000OOO0000O0OOO0 = getBalance(OO0OO000OOO0000O0)
    O0O0O0000OO00OO0O = 'https://www.cryptopia.co.nz/Api/SubmitTrade'
    O0000OO0O00O00OOO = make_nonce()
    OO00OOOOO00000000 = OO0OO000OOO0000O0 + '/BTC'
    O0OO0OOOOO0000000 = OO0000OOO0000OOOO.dumps({'Market': OO00OOOOO00000000,'Type': 'Sell','Rate': O0O0OOOO0000O0OOO,'Amount': O000OOO0000O0OOO0})
    O00O0000OO00O0O0O = O00O0000OO0O0O0O0.md5()
    O00O0000OO00O0O0O.update(O0OO0OOOOO0000000.encode('utf-8'))
    OOO0O00OOOO0OO0O0 = O0OOOO0O0O0O0O0OO.b64encode(O00O0000OO00O0O0O.digest()).decode('utf-8')
    O00O00O0000OOO0OO = key + 'POST' + O00OO0OOOOOOO00OO.parse.quote_plus(O0O0O0000OO00OO0O).lower() + O0000OO0O00O00OOO + OOO0O00OOOO0OO0O0
    O000O00O0000OOOO0 = O0OOOO0O0O0O0O0OO.b64encode(OOOO00OOO00OOO0O0.new(O0OOOO0O0O0O0O0OO.b64decode(secret), O00O00O0000OOO0OO.encode('utf-8'), O00O0000OO0O0O0O0.sha256).digest())
    O0OOOO0O000000OOO = 'amx ' + key + ':' + O000O00O0000OOOO0.decode('utf-8') + ':' + O0000OO0O00O00OOO
    OOOOO00OOOO0OOOO0 = {'Authorization': O0OOOO0O000000OOO,'Content-Type': 'application/json; charset=utf-8'}
    OO00OO0O00OOOO000 = O0O00O000O000OOO0.post(O0O0O0000OO00OO0O, data=O0OO0OOOOO0000000, headers=OOOOO00OOOO0OOOO0)
    O00O00O0OOOO00O0O = OO0000OOO0000OOOO.loads(OO00OO0O00OOOO000.text)
    return O00O00O0OOOO00O0O['Data']['OrderId']


def marketHistory(OO00O0O000000O0O0):
    O00OOOO0O00O0O0O0 = 'https://www.cryptopia.co.nz/api/GetMarketHistory/' + OO00O0O000000O0O0 + '_BTC'
    O00OO0O0000O000O0 = O0O00O000O000OOO0.get(O00OOOO0O00O0O0O0)
    O0O00O0OOO0OOO00O = OO0000OOO0000OOOO.loads(O00OO0O0000O000O0.text)
    O00OOO00O00O0O00O = O0O00O0OOO0OOO00O['Data']
    with open('mh.json', 'w') as (O0OO0OO0O0000O0O0):
        OO0000OOO0000OOOO.dump(O0O00O0OOO0OOO00O, O0OO0OO0O0000O0O0)
    O00O00OO00000O0O0 = []
    OO00O00OO00O0O0O0 = []
    for O0O0OOOOOOOO0OOO0 in O00OOO00O00O0O00O:
        O00O00OO00000O0O0.append(O0O0OOOOOOOO0OOO0['Price'])
        OO00O00OO00O0O0O0.append(O0O0OOOOOOOO0OOO0['Timestamp'])

    OO0O00O00OOOO0OO0 = OO00O00OO00O0O0O0[0]
    O00000O0OO0OOOOOO = OO00OO0OOOOO00OO0.datetime.fromtimestamp(OO0O00O00OOOO0OO0).strftime('%M')
    OO0OO0OO0OO00OOOO = 0
    O0O0O0OO0OOOOO000 = 0
    for O0O0OOOOOOOO0OOO0 in OO00O00OO00O0O0O0:
        OO0OOO0000O0OO00O = OO00OO0OOOOO00OO0.datetime.fromtimestamp(O0O0OOOOOOOO0OOO0).strftime('%M')
        if float(OO0OOO0000O0OO00O) == float(O00000O0OO0OOOOOO) - 1:
            OO0OO0OO0OO00OOOO = OO00O00OO00O0O0O0.index(O0O0OOOOOOOO0OOO0)
            O0O0O0OO0OOOOO000 = O00O00OO00000O0O0[OO0OO0OO0OO00OOOO]
            break

    O000OOOO0O0OOO0O0 = 0
    OOO00O0O00O0O000O = 0
    for O0O0OOOOOOOO0OOO0 in OO00O00OO00O0O0O0:
        OO0OOO0000O0OO00O = OO00OO0OOOOO00OO0.datetime.fromtimestamp(O0O0OOOOOOOO0OOO0).strftime('%M')
        if float(OO0OOO0000O0OO00O) == float(O00000O0OO0OOOOOO) - 2:
            O000OOOO0O0OOO0O0 = OO00O00OO00O0O0O0.index(O0O0OOOOOOOO0OOO0)
            OOO00O0O00O0O000O = O00O00OO00000O0O0[O000OOOO0O0OOO0O0]
            break

    return (
     O0O0O0OO0OOOOO000, OOO00O0O00O0O000O)


def USD_BTC_Price():
    O0OOOOO0OOO000O0O = 'https://www.cryptopia.co.nz/api/GetMarket/BTC_USDT'
    O00OOO00O00O0OOO0 = O0O00O000O000OOO0.get(O0OOOOO0OOO000O0O)
    O0O00O0O000O000OO = OO0000OOO0000OOOO.loads(O00OOO00O00O0OOO0.text)
    OOO0OOOO00OOOOO00 = O0O00O0O000O000OO['Data']
    return OOO0OOOO00OOOOO00['LastPrice']


def Trade(O00OO0O0O0OO00OO0, O00OO00O0O0O0000O, OO00OOO000O00O000, O0O00000000000O0O):
    O0OO0OO0OO0O0OOO0 = O0O0OOO00OO0O0OO0.Fore.YELLOW + O0O0OOO00OO0O0OO0.Back.BLUE + '['
    OO0OOO00OOO0O00O0 = ']' + O0O0OOO00OO0O0OO0.Style.RESET_ALL + ' '
    OO00O0OOOO0000OOO = O0O0OOO00OO0O0OO0.Fore.YELLOW
    O0OOOO0OO0OOOOO0O = O0O0OOO00OO0O0OO0.Style.RESET_ALL
    print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Symbol: ' + O0OOOO0OO0OOOOO0O + O00OO0O0O0OO00OO0)
    OO00OO00OOOOOOO00 = getTicker(O00OO0O0O0OO00OO0)
    print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Current Price: ' + O0OOOO0OO0OOOOO0O + '%.8f' % OO00OO00OOOOOOO00)
    OO0O0OO0OO00O00O0 = USD_BTC_Price()
    OOO0O000O0OOOOOOO = getBalance('BTC')
    print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Bitcoin Balance:  ' + O0OOOO0OO0OOOOO0O + '%.8f' % float(OOO0O000O0OOOOOOO) + ' | $' + str(float(OOO0O000O0OOOOOOO) * OO0O0OO0OO00O00O0))
    print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Amount to use:  ' + O0OOOO0OO0OOOOO0O + '%.8f' % OO00OOO000O00O000 + ' | $' + str(OO00OOO000O00O000 * OO0O0OO0OO00O00O0))
    OO0O0O000OO00OOO0 = OO00OOO000O00O000 / OO00OO00OOOOOOO00
    print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Amount To Purchase: ' + O0OOOO0OO0OOOOO0O + '%.8f' % OO0O0O000OO00OOO0)
    print('------------------------------------' + O0OOOO0OO0OOOOO0O)
    print(' ')
    if float(O0O00000000000O0O) != 0:
        OOO00OOOOO000O0O0, O0OOOOO000O0OOO0O = marketHistory(O00OO0O0O0OO00OO0)
        OO0OO0O0O00OO00OO = config.get('RiskMultiplier', O0O00000000000O0O)
        O000OOO00OO0OOOOO = OOO00OOOOO000O0O0 * float(OO0OO0O0O00OO00OO)
        O00O000O00O0OO000 = O0OOOOO000O0OOO0O * float(OO0OO0O0O00OO00OO)
        if OOO00OOOOO000O0O0 != 0 and OO00OO00OOOOOOO00 + OO00OO00OOOOOOO00 * float(O00OO00O0O0O0000O) >= O000OOO00OO0OOOOO:
            print('Buy conditions not met, canceling order.')
            print('price 1')
            OO00OO0O0O00000OO = OO00OO00OOOOOOO00 * OO0O0OO0OO00O00O0
            print('Last Price: BTC ' + '%.8f' % OO00OO00OOOOOOO00 + ' | $' + '%.2f' % OO00OO0O0O00000OO)
            O00O0OOO000OO0OOO = OO00OO00OOOOOOO00 + OO00OO00OOOOOOO00 * float(O00OO00O0O0O0000O)
            O0OOO00OO0OOOOOOO = O00O0OOO000OO0OOO * OO0O0OO0OO00O00O0
            print('Potential Sell Price: BTC ' + '%.2f' % O00O0OOO000OO0OOO + ' | $' + '%.2f' % O0OOO00OO0OOOOOOO)
            OOO00OOOOO00OOO0O = O000OOO00OO0OOOOO * OO0O0OO0OO00O00O0
            print('Price Limit: BTC ' + '%.8f' % O000OOO00OO0OOOOO + ' | $' + '%.2f' % OOO00OOOOO00OOO0O)
            O0OO0OO0OO0O0OOO0 = getTicker(O00OO0O0O0OO00OO0)
            O00O00OOO0O0O00OO = O0OO0OO0OO0O0OOO0 * OO0O0OO0OO00O00O0
            print('Current Price: BTC ' + '%.8f' % O0OO0OO0OO0O0OOO0 + ' | $' + '%.2f' % O00O00OOO0O0O00OO)
            return
        if O0OOOOO000O0OOO0O != 0 and OO00OO00OOOOOOO00 + OO00OO00OOOOOOO00 * float(O00OO00O0O0O0000O) >= O00O000O00O0OO000:
            print('Buy conditions not met, canceling order.')
            print('price 2')
            OO00OO0O0O00000OO = OO00OO00OOOOOOO00 * OO0O0OO0OO00O00O0
            print('Last Price: BTC ' + '%.8f' % OO00OO00OOOOOOO00 + ' | $' + '%.2f' % OO00OO0O0O00000OO)
            O00O0OOO000OO0OOO = OO00OO00OOOOOOO00 + OO00OO00OOOOOOO00 * float(O00OO00O0O0O0000O)
            O0OOO00OO0OOOOOOO = O00O0OOO000OO0OOO * OO0O0OO0OO00O00O0
            print('Potential Sell Price: BTC ' + '%.2f' % O00O0OOO000OO0OOO + ' | $' + '%.2f' % O0OOO00OO0OOOOOOO)
            OOO00OOOOO00OOO0O = O000OOO00OO0OOOOO * OO0O0OO0OO00O00O0
            print('Price Limit: BTC ' + '%.8f' % O000OOO00OO0OOOOO + ' | $' + '%.2f' % OOO00OOOOO00OOO0O)
            O0OO0OO0OO0O0OOO0 = getTicker(O00OO0O0O0OO00OO0)
            O00O00OOO0O0O00OO = O0OO0OO0OO0O0OOO0 * OO0O0OO0OO00O00O0
            print('Current Price: BTC ' + '%.8f' % O0OO0OO0OO0O0OOO0 + ' | $' + '%.2f' % O00O00OOO0O0O00OO)
            return
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Placing Order...')
        OO000OOO0O0OO0O00 = buyOrder(O00OO0O0O0OO00OO0, OO0O0O000OO00OOO0)
        OOOOOOOO0O0OO00O0 = O00OO0O0O0OO00OO0 + '/BTC'
        OO000O00000OOOOOO = getOrder(OOOOOOOO0O0OO00O0)
        O00O0OOO0O0OO00OO = int(OO000OOO0O0OO0O00[0])
        for O0OOOOOO0OO0O0OO0 in OO000O00000OOOOOO:
            if O00O0OOO0O0OO00OO == O0OOOOOO0OO0O0OO0['TradeId']:
                OO00O00OOO00O0O00 = O0OOOOOO0OO0O0OO0['Rate']

        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Order Successful!')
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Price: ' + O0OOOO0OO0OOOOO0O + '%.8f' % OO00O00OOO00O0O00)
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Bitcoin Balance: ' + O0OOOO0OO0OOOOO0O + '%.8f' % getBalance('BTC'))
        print('------------------------------------')
        print(' ')
        OO0O0O0O000O00OO0 = OO00O00OOO00O0O00 * float(O00OO00O0O0O0000O)
        O0O00O0OO0OOO000O = OO00O00OOO00O0O00 + OO0O0O0O000O00OO0
        OO00O00OOO00O0O00 = O0O00O0OO0OOO000O / (1 + float(SellPercent))
        O0OO0O0O0O0000O0O = sellOrder(O00OO0O0O0OO00OO0, OO00O00OOO00O0O00)
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Sell Order Placed!')
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Price: ' + O0OOOO0OO0OOOOO0O + '%.8f' % OO00O00OOO00O0O00)
        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Patiently Waiting...' + O0OOOO0OO0OOOOO0O)
        OO00OO0OOO000OOOO = True
        while 1:
            if OO00OO0OOO000OOOO:
                OO000O00000OOOOOO = getOrder(OOOOOOOO0O0OO00O0)
                print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Current Price: ' + O0OOOO0OO0OOOOO0O + '%.8f' % getTicker(O00OO0O0O0OO00OO0), end='\r')
                for O0OOOOOO0OO0O0OO0 in OO000O00000OOOOOO:
                    if O0OO0O0O0O0000O0O == O0OOOOOO0OO0O0OO0['TradeId']:
                        print('------------------------------------')
                        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Sold!')
                        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Bitcoin Balance: ' + O0OOOO0OO0OOOOO0O + '%.8f' % getBalance('btc'))
                        OO0O0OO0OO00O00O0 = USD_BTC_Price()
                        print(O0OO0OO0OO0O0OOO0 + O0OOOOO0O000O000O('%H:%M:%S', OO00O00OO00O0OOOO()) + OO0OOO00OOO0O00O0 + OO00O0OOOO0000OOO + 'Bitcoin Balance in USD: ' + O0OOOO0OO0OOOOO0O + str(getBalance('btc') * OO0O0OO0OO00O00O0))
                        OO00OO0OOO000OOOO = False


def main():
    OOOO000O0O0O0000O = getBalance('BTC')
    O0OO0OOOO0O0OOOOO = USD_BTC_Price()
    OO0O00000000OO00O = float(OOOO000O0O0O0000O) * O0OO0OOOO0O0OOOOO
    print(O0O0OOO00OO0O0OO0.Fore.RED + '_____________________________________________________________________')
    print(O0O0OOO00OO0O0OO0.Fore.RED + 'Balance (BTC): ' + str(OOOO000O0O0O0000O))
    print(O0O0OOO00OO0O0OO0.Fore.RED + 'Balance in USD: ' + str(OO0O00000000OO00O))
    print(O0O0OOO00OO0O0OO0.Fore.RED + '_____________________________________________________________________')
    if O0OO00OOO000O00O0.system() == 'Windows':
        O00O0O0O00O00OO00 = input('[1] Risk Multiplier: ')
        OOO0O0O000OO0O000 = input('[2] % of bitcoin to spend: ')
        OOOO0O00000O000OO = input('[3] Profit %: ')
        OO0O00OO0O0OOO00O = input('[4] Coin: ')
    else:
        O00O0O0O00O00OO00 = input(O0O0OOO00OO0O0OO0.Fore.CYAN + '[1] Risk Multiplier: ')
        OOO0O0O000OO0O000 = input(O0O0OOO00OO0O0OO0.Fore.CYAN + '[2] % of bitcoin to spend: ')
        OOOO0O00000O000OO = input(O0O0OOO00OO0O0OO0.Fore.CYAN + '[3] Profit %: ')
        OO0O00OO0O0OOO00O = input(O0O0OOO00OO0O0OO0.Fore.CYAN + '[4] Coin: ')
    if len(OOOO0O00000O000OO) <= 1:
        OOOO0O00000O000OO = '0.0' + OOOO0O00000O000OO
    else:
        if len(OOOO0O00000O000OO) <= 2:
            OOOO0O00000O000OO = '0.' + OOOO0O00000O000OO
        else:
            if len(OOOO0O00000O000OO) <= 3:
                OOOO0O00000O000OO = OOOO0O00000O000OO[0] + '.' + OOOO0O00000O000OO[1:]
            else:
                OOOO0O00000O000OO = OOOO0O00000O000OO[0:2]
            if len(OOO0O0O000OO0O000) <= 1:
                OOO0O0O000OO0O000 = '0.0' + OOO0O0O000OO0O000
            else:
                if len(OOO0O0O000OO0O000) <= 2:
                    OOO0O0O000OO0O000 = '0.' + OOO0O0O000OO0O000
                else:
                    if len(OOO0O0O000OO0O000) <= 3:
                        OOO0O0O000OO0O000 = OOO0O0O000OO0O000[0] + '.' + OOO0O0O000OO0O000[1:]
                    else:
                        OOO0O0O000OO0O000 = OOO0O0O000OO0O000[0:2]
                    O0O0O0O0O0000000O = OOOO000O0O0O0000O * float(OOO0O0O000OO0O000)
                    Trade(OO0O00OO0O0OOO00O, OOOO0O00000O000OO, O0O0O0O0O0000000O, O00O0O0O00O00OO00)
