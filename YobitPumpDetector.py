
import json as OO0OOOO0OOO0OO0OO, requests as O000OO00O0O0OO000
from time import strftime as OOOOOOO0O00OO0OOO, gmtime as O0O0O0O0OO000OO00
import time as OOOOO0OO0O00OO0OO, hmac as OOO00OO000O000000, pickle as OOOO00OOOO00O000O, hashlib as OO0OOO000000OO000, pprint as O0O0O0OO0OO00000O, grequests as OOO0O00O0O000OO00
try:
    from urllib import urlencode as OO0OO0O00O00OOOO0
    from urlparse import urljoin as OOO00O0OOOO00OOOO
except ImportError:
    from urllib.parse import urlencode as OO0OO0O00O00OOOO0
    from urllib.parse import urljoin as OOO00O0OOOO00OOOO

import logger as O0O00O0OO00OOOOOO, colorama as OO000000O0OOOOO0O, YobitBot as OOO0000OO00O00O0O, configparser as OO0OO0O00OO0OOOO0
config = OO0OO0O00OO0OOOO0.ConfigParser()
config.readfp(open('config.txt'))
key = config.get('Yobit', 'Key')
secret = config.get('Yobit', 'Secret')
price = []
volume = []
priceNew = []
volumeNew = []
names = []
querys = []

def getQueries():
    O0OO0O0O00O0OOO00 = ''
    OO0O0O0O00OO0000O = ''
    O0O00OOOOOOO0O000 = ''
    O0OOOOOOOO0OO0O0O = ''
    OO0OOOOO0O0O0OOOO = ''
    OO00000OO0OOO0OOO = ''
    OOOO0O0O00OOO0O00 = ''
    OO0O0O000O00O0O00 = ''
    OO000OOOO0O0000O0 = ''
    OOO0O0OOOO0O0O00O = ''
    OOO00O00OO0O00O0O = ''
    OO0O000O00OOOO0O0 = ''
    O0OOO00OOO00OO00O = ''
    O0OOO000000OOOOOO = ''
    OO00OOO000O00OO00 = ''
    O0OO0OOO0O0OO0000 = ''
    OO00O000OO000OO0O = ''
    O00O000OO000O00O0 = ''
    O000O0O0O0OO0O00O = ''
    with open('pairs.txt', 'rb') as (O0OO0OO0000O000OO):
        O0OO00OO000OO0O00 = OOOO00OOOO00O000O.load(O0OO0OO0000O000OO)
    O000OOO0OOOO0O0OO = 0
    for OO0O0O0O0O0O00O00 in O0OO00OO000OO0O00:
        if O000OOO0OOOO0O0OO <= 50:
            O0OO0O0O00O0OOO00 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 50 and O000OOO0OOOO0O0OO <= 100:
            OO0O0O0O00OO0000O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 100 and O000OOO0OOOO0O0OO <= 150:
            O0O00OOOOOOO0O000 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 150 and O000OOO0OOOO0O0OO <= 200:
            O0OOOOOOOO0OO0O0O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 200 and O000OOO0OOOO0O0OO <= 250:
            OO0OOOOO0O0O0OOOO += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 250 and O000OOO0OOOO0O0OO <= 300:
            OO00000OO0OOO0OOO += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 300 and O000OOO0OOOO0O0OO <= 350:
            OOOO0O0O00OOO0O00 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 350 and O000OOO0OOOO0O0OO <= 400:
            OO0O0O000O00O0O00 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 400 and O000OOO0OOOO0O0OO <= 450:
            OO000OOOO0O0000O0 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 450 and O000OOO0OOOO0O0OO <= 500:
            OOO0O0OOOO0O0O00O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 500 and O000OOO0OOOO0O0OO <= 550:
            OOO00O00OO0O00O0O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 550 and O000OOO0OOOO0O0OO <= 600:
            OO0O000O00OOOO0O0 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 600 and O000OOO0OOOO0O0OO <= 650:
            O0OOO00OOO00OO00O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 650 and O000OOO0OOOO0O0OO <= 700:
            O0OOO000000OOOOOO += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 700 and O000OOO0OOOO0O0OO <= 750:
            OO00OOO000O00OO00 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 750 and O000OOO0OOOO0O0OO <= 800:
            O0OO0OOO0O0OO0000 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 800 and O000OOO0OOOO0O0OO <= 850:
            OO00O000OO000OO0O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 850 and O000OOO0OOOO0O0OO <= 900:
            O00O000OO000O00O0 += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1
        if O000OOO0OOOO0O0OO > 900 and O000OOO0OOOO0O0OO <= 950:
            O000O0O0O0OO0O00O += str(OO0O0O0O0O0O00O00) + '-'
            O000OOO0OOOO0O0OO += 1

    querys.append(O0OO0O0O00O0OOO00[:-1])
    querys.append(OO0O0O0O00OO0000O[:-1])
    querys.append(O0O00OOOOOOO0O000[:-1])
    querys.append(O0OOOOOOOO0OO0O0O[:-1])
    querys.append(OO0OOOOO0O0O0OOOO[:-1])
    querys.append(OO00000OO0OOO0OOO[:-1])
    querys.append(OOOO0O0O00OOO0O00[:-1])
    querys.append(OO0O0O000O00O0O00[:-1])
    querys.append(OO000OOOO0O0000O0[:-1])
    querys.append(OOO0O0OOOO0O0O00O[:-1])
    querys.append(OOO00O00OO0O00O0O[:-1])
    querys.append(OO0O000O00OOOO0O0[:-1])
    querys.append(O0OOO00OOO00OO00O[:-1])
    querys.append(O0OOO000000OOOOOO[:-1])
    querys.append(OO00OOO000O00OO00[:-1])
    O0O000O0OO00000OO = 'https://yobit.net/api/3/ticker/'
    O0O0O00O000O0OOOO = (OOO0O00O0O000OO00.get(O0O000O0OO00000OO + OOO00OO0OO0O00OOO, headers={'apisign': OOO00OO000O000000.new(secret.encode(), OOO00OO0OO0O00OOO.encode(), OO0OOO000000OO000.sha512).hexdigest()}) for OOO00OO0OO0O00OOO in querys)
    OOO0OOO0OO000000O = OOO0O00O0O000OO00.map(O0O0O00O000O0OOOO)
    O0O0000O0O0OOOOOO = [O00OOO0O00OOOOO0O.json() for O00OOO0O00OOOOO0O in OOO0OOO0OO000000O]
    for O000O000O0000O0OO in O0O0000O0O0OOOOOO:
        for OO0O00OOO00O00000 in O000O000O0000O0OO:
            O0O0000O0O00OO000 = OO0O00OOO00O00000
            volume.append(O000O000O0000O0OO[O0O0000O0O00OO000]['vol'])
            price.append(O000O000O0000O0OO[O0O0000O0O00OO000]['last'])
            names.append(O0O0000O0O00OO000)


def updatePrices():
    OO0OOOO0OO0OOO000 = 'https://yobit.net/api/3/ticker/'
    O0O0OO0OO0OOO0OOO = (OOO0O00O0O000OO00.get(OO0OOOO0OO0OOO000 + O0OOO0OOOO00O00OO, headers={'apisign': OOO00OO000O000000.new(secret.encode(), O0OOO0OOOO00O00OO.encode(), OO0OOO000000OO000.sha512).hexdigest()}) for O0OOO0OOOO00O00OO in querys)
    OOO0O00O0O0O0OO0O = None
    while OOO0O00O0O0O0OO0O == None:
        OOO0O00O0O0O0OO0O = OOO0O00O0O000OO00.map(O0O0OO0OO0OOO0OOO)

    OOOOOOOO00OOOOOO0 = [OOO0O00O000O0OO0O.json() for OOO0O00O000O0OO0O in OOO0O00O0O0O0OO0O]
    for O0O0O0O00OOO000OO in OOOOOOOO00OOOOOO0:
        for OOOO0O00OO0O00O00 in O0O0O0O00OOO000OO:
            O0O000O0O0OO0O000 = OOOO0O00OO0O00O00
            volumeNew.append(O0O0O0O00OOO000OO[O0O000O0O0OO0O000]['vol'])
            priceNew.append(O0O0O0O00OOO000OO[O0O000O0O0OO0O000]['last'])
            names.append(O0O000O0O0OO0O000)


def main(O0O00OO0000OOOO0O):
    O0OOOOO000O0OOOO0 = True
    getQueries()
    O00000O00OOO00OO0 = O0O00O0OO00OOOOOO.getLogger('test')
    OOOOOO00OOOO00OO0 = input(OO000000O0OOOOO0O.Fore.CYAN + 'Price Percent Change? ' + OO000000O0OOOOO0O.Style.RESET_ALL)
    OO0O00OOOO000OOO0 = input(OO000000O0OOOOO0O.Fore.CYAN + 'Volume Percent Change? ' + OO000000O0OOOOO0O.Style.RESET_ALL)
    if O0O00OO0000OOOO0O != None:
        O000O000O0O00OO0O = OOO0000OO00O00O0O.getBalance('btc')
        OOO00OO0O00OO0000 = OOO0000OO00O00O0O.USD_BTC_Price()
        OO0OOO000O0O00O00 = O000O000O0O00OO0O * OOO00OO0O00OO0000
        print(OO000000O0OOOOO0O.Fore.RED + '_____________________________________________________________________' + OO000000O0OOOOO0O.Style.RESET_ALL)
        print(OO000000O0OOOOO0O.Fore.RED + 'Balance (BTC): ' + str(O000O000O0O00OO0O) + OO000000O0OOOOO0O.Style.RESET_ALL)
        print(OO000000O0OOOOO0O.Fore.RED + 'Balance in USD: ' + str(OO0OOO000O0O00O00) + OO000000O0OOOOO0O.Style.RESET_ALL)
        print(OO000000O0OOOOO0O.Fore.RED + '_____________________________________________________________________' + OO000000O0OOOOO0O.Style.RESET_ALL)
        if platform.system() == 'Windows':
            O00O0000OO0000O0O = input('[1] Risk Multiplier: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
            O0O00O00OO0OO000O = input('[2] % of bitcoin to spend: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
            OOO0OO0O00000OO0O = input('[3] Profit %: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
        else:
            O00O0000OO0000O0O = input('[1] Risk Multiplier: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
            O0O00O00OO0OO000O = input('[2] % of bitcoin to spend: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
            OOO0OO0O00000OO0O = input('[3] Profit %: ' + OO000000O0OOOOO0O.Style.RESET_ALL)
        O0O00O00OO0OO000O, OOO0OO0O00000OO0O = percentageFix(O0O00O00OO0OO000O, OOO0OO0O00000OO0O)
    OO000O0000OO00O00, O0OOOO0O0OOO000OO = percentageFix(OOOOOO00OOOO00OO0, OO0O00OOOO000OOO0)
    O00O000O0OO00000O = OO000000O0OOOOO0O.Fore.YELLOW + OO000000O0OOOOO0O.Back.BLUE
    OO000O0O0O0OO0OO0 = OO000000O0OOOOO0O.Style.RESET_ALL
    O00000O00OOO00OO0.critical('working')
    print(' ')
    while O0OOOOO000O0OOOO0 == True:
        updatePrices()
        for O0O000O0O00OO000O in priceNew:
            OO00OO0O00O00O00O = priceNew.index(O0O000O0O00OO000O)
            if float(O0O000O0O00OO000O) > float(price[OO00OO0O00O00O00O]) + float(price[OO00OO0O00O00O00O]) * float(OO000O0000OO00O00) and float(volumeNew[OO00OO0O00O00O00O]) > float(volume[OO00OO0O00O00O00O]) + float(volume[OO00OO0O00O00O00O]) * float(O0OOOO0O0OOO000OO):
                O0O00000OOO0O0O00 = str(O0O000O0O00OO000O / price[OO00OO0O00O00O00O])
                OOO000O0000OOOOO0 = str(volumeNew[OO00OO0O00O00O00O] / volume[OO00OO0O00O00O00O])
                print(O00O000O0OO00000O + 'Time: ' + OO000O0O0O0OO0OO0 + OOOOOOO0O00OO0OOO('%H:%M:%S', O0O0O0O0OO000OO00()))
                print(O00O000O0OO00000O + 'Name: ' + OO000O0O0O0OO0OO0 + names[OO00OO0O00O00O00O])
                print(O00O000O0OO00000O + 'Price % Change: ' + OO000O0O0O0OO0OO0 + O0O00000OOO0O0O00[2:4] + '%')
                print(O00O000O0OO00000O + 'Volume % Change: ' + OO000O0O0O0OO0OO0 + OOO000O0000OOOOO0[2:4] + '%')
                print(O00O000O0OO00000O + 'Old Price: ' + OO000O0O0O0OO0OO0 + '%.8f' % price[OO00OO0O00O00O00O])
                print(O00O000O0OO00000O + 'New Price: ' + OO000O0O0O0OO0OO0 + '%.8f' % O0O000O0O00OO000O)
                print(O00O000O0OO00000O + 'Old Volume: ' + OO000O0O0O0OO0OO0 + '%.8f' % volume[OO00OO0O00O00O00O])
                print(O00O000O0OO00000O + 'New Volume: ' + OO000O0O0O0OO0OO0 + '%.8f' % volumeNew[OO00OO0O00O00O00O])
                print('--------------------------------')
                if O0O00OO0000OOOO0O != None:
                    O000O000O0O00OO0O = OOO0000OO00O00O0O.getBalance('btc')
                    O00O00OO0000O00OO = O000O000O0O00OO0O * float(O0O00O00OO0OO000O)
                    OO0O0O0O0OOOO0000 = names[OO00OO0O00O00O00O].split('_')
                    OOO0000OO00O00O0O.Trade(OO0O0O0O0OOOO0000[0], OOO0OO0O00000OO0O, O00O00OO0000O00OO, O00O0000OO0000O0O)
                price[OO00OO0O00O00O00O] = O0O000O0O00OO000O
                volume[OO00OO0O00O00O00O] = volumeNew[OO00OO0O00O00O00O]
            else:
                price[OO00OO0O00O00O00O] = O0O000O0O00OO000O
                volume[OO00OO0O00O00O00O] = volumeNew[OO00OO0O00O00O00O]

        volumeNew[:] = []
        priceNew[:] = []
        names[:] = []
        OOOOO0OO0O00OO0OO.sleep(3)


def percentageFix(OO000O0OO0O0O00OO, OO00O00O00O00000O):
    if len(OO000O0OO0O0O00OO) <= 1:
        OO000O0OO0O0O00OO = '0.0' + OO000O0OO0O0O00OO
    else:
        if len(OO000O0OO0O0O00OO) <= 2:
            OO000O0OO0O0O00OO = '0.' + OO000O0OO0O0O00OO
        else:
            if len(OO000O0OO0O0O00OO) <= 3:
                OO000O0OO0O0O00OO = OO000O0OO0O0O00OO[0] + '.' + OO000O0OO0O0O00OO[1:]
            else:
                OO000O0OO0O0O00OO = OO000O0OO0O0O00OO[0:2]
            if len(OO00O00O00O00000O) <= 1:
                OO00O00O00O00000O = '0.0' + OO00O00O00O00000O
            else:
                if len(OO00O00O00O00000O) <= 2:
                    OO00O00O00O00000O = '0.' + OO00O00O00O00000O
                else:
                    if len(OO00O00O00O00000O) <= 3:
                        OO00O00O00O00000O = OO00O00O00O00000O[0] + '.' + OO00O00O00O00000O[1:]
                    else:
                        OO00O00O00O00000O = OO00O00O00O00000O[0:2]
    return (
     OO000O0OO0O0O00OO, OO00O00O00O00000O)
